#BlueJ class context
comment0.target=BallGame
comment0.text=\ Runs\ a\ simulation\ of\ launching\ balls\ at\ a\ target.\r\n
comment1.params=
comment1.target=void\ setupGUI()
comment1.text=Setup\ the\ mouse\ listener\ and\ the\ buttons
comment10.params=bounce_count\ num\ target
comment10.target=int\ bounce2(int,\ int,\ Ball)
comment10.text=\r\n\ Function\ for\ any\ object\ to\ undergo\ the\ second\ bounce\r\n
comment11.params=bounce_count\ num\ target
comment11.target=int\ bounce3(int,\ int,\ Ball)
comment11.text=\r\n\ Function\ for\ any\ object\ to\ undergo\ the\ third\ bounce\r\n
comment12.params=bounce_count\ num\ target
comment12.target=int\ bounce4(int,\ int,\ Ball)
comment12.text=\r\n\ Function\ for\ any\ object\ to\ undergo\ the\ fourth\ bounce\r\n
comment13.params=bounce_count\ num\ target
comment13.target=int\ bounce5(int,\ int,\ Ball)
comment13.text=\r\n\ Function\ for\ any\ object\ to\ undergo\ the\ fifth\ bounce\r\n
comment14.params=target\ shelf
comment14.target=void\ hit(Ball,\ double)
comment14.text=\r\n\ Very\ cool\ function\ that\ determines\ when\ the\ ball\ hits\ the\ target\r\n
comment15.params=target_stay\ target_move\ shelf
comment15.target=void\ collide(Ball,\ Ball,\ double)
comment15.text=\r\n\ Super\ super\ cool\ function\ that\ determines\ when\ a\ target\ hits\ another\ target\r\n
comment16.params=height\ width\ flag_height\ flag_width\ y\ LEFT
comment16.target=void\ star(double,\ double,\ double,\ double,\ double,\ double)
comment16.text=\r\n\ This\ is\ just\ the\ function\ so\ that\ I\ can\ make\ a\ three\ star\ system\ similar\ to\ the\ one\ seen\ in\ angry\ birds.\r\n
comment17.params=height\ width\ flag_height\ flag_width\ y\ LEFT
comment17.target=void\ star_outline(double,\ double,\ double,\ double,\ double,\ double)
comment17.text=\r\n\ This\ is\ the\ same\ as\ the\ star\ above\ but\ instead\ it\ is\ just\ the\ outline\ of\ the\ star.\ This\ will\ be\ used\ if\ the\ 'gamer'\ does\ not\ achieve\ all\ three\ stars\r\n
comment18.params=
comment18.target=void\ runGameChallenge()
comment18.text=\ Version\ of\ the\ game\ with\ two\ targets.\r\n\ \ Hint\:\ drawGameTwoTargets\ has\ been\ written\ for\ you.\ \r\n
comment19.params=ball\ target1\ target2\ target3\ target4\ col1\ col2\ col3\ col4\ col5\ shelf1Ht\ shelf2Ht\ shelf3Ht\ shelf4Ht\ SHELF_X1\ SHELF_X2\ SHELF_X3\ SHELF_X4
comment19.target=void\ drawGameChallenge(Ball,\ Ball,\ Ball,\ Ball,\ Ball,\ java.awt.Color,\ java.awt.Color,\ java.awt.Color,\ java.awt.Color,\ java.awt.Color,\ double,\ double,\ double,\ double,\ double,\ double,\ double,\ double)
comment19.text=\r\n\ Draw\ the\ game\:\ ball,\ two\ targets,\ ground,\ launcher\ and\ shelves.\r\n
comment2.params=
comment2.target=void\ clear()
comment20.params=arguments
comment20.target=void\ main(java.lang.String[])
comment20.text=Create\ a\ new\ BallGame\ object\ and\ setup\ the\ interface
comment3.params=
comment3.target=void\ runGameOneTarget()
comment3.text=\r\n\ Main\ loop\ for\ the\ Core\ version\ of\ the\ game\r\n\ It\ creates\ a\ ball\ (to\ be\ launched)\ and\ a\ target\ ball\ (on\ a\ shelf)\r\n\ It\ has\ a\ loop\ that\ repeatedly\r\n\ \ \ -\ Makes\ a\ new\ ball\ if\ the\ old\ one\ has\ gone\ off\ the\ right\ end.\r\n\ \ \ -\ Makes\ the\ ball\ and\ the\ target\ ball\ take\ one\ step\r\n\ \ \ \ \ (unless\ they\ are\ still\ on\ the\ launcher\ or\ shelf)\r\n\ \ \ -\ Checks\ whether\ the\ ball\ is\ hitting\ the\ target\r\n\ \ \ -\ redraws\ the\ state\ of\ the\ game\r\n\ The\ loop\ stops\ when\ the\ target\ has\ gone\ off\ the\ right\ end\ and\ the\ ball\ is\ on\ the\ launcher.\r\n
comment4.params=action\ x\ y
comment4.target=void\ launch(java.lang.String,\ double,\ double)
comment4.text=\r\n\ Launch\ the\ current\ ball,\ if\ it\ is\ still\ in\ the\ catapult,\r\n\ Speed\ is\ based\ on\ the\ position\ of\ the\ mouse\ relative\ to\ the\ ground.\r\n
comment5.params=ball\ target\ col\ shelfHeight
comment5.target=void\ drawGameOneTarget(Ball,\ Ball,\ java.awt.Color,\ double)
comment5.text=\r\n\ Draw\ the\ game\:\ ball,\ target,\ ground,\ launcher\ and\ shelf.\r\n
comment6.params=
comment6.target=void\ runGameTwoTargets()
comment6.text=\ Version\ of\ the\ game\ with\ two\ targets.\r\n\ \ Hint\:\ drawGameTwoTargets\ has\ been\ written\ for\ you.\ \r\n
comment7.params=ball\ target1\ target2\ col\ shelf1Ht\ shelf2Ht
comment7.target=void\ drawGameTwoTargets(Ball,\ Ball,\ Ball,\ java.awt.Color,\ double,\ double)
comment7.text=\r\n\ Draw\ the\ game\:\ ball,\ two\ targets,\ ground,\ launcher\ and\ shelves.\r\n
comment8.params=bounce_count\ num\ target
comment8.target=int\ fall(int,\ int,\ Ball)
comment8.text=\r\n\ Function\ for\ any\ object\ to\ fall.\ \r\n
comment9.params=bounce_count\ num\ target
comment9.target=int\ bounce1(int,\ int,\ Ball)
comment9.text=\r\n\ Function\ for\ any\ object\ to\ undergo\ the\ first\ bounce\r\n
numComments=21
